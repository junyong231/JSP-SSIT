/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-10-24 01:22:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.days07;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex07_005fMVC_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1729216456084L));
    _jspx_dependants.put("jar:file:/C:/Class/Workspace/jspClass/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/jspPro/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <title>Insert title here</title>\r\n");
      out.write("    <link\r\n");
      out.write("      rel=\"shortcut icon\"\r\n");
      out.write("      type=\"image/x-icon\"\r\n");
      out.write("      href=\"http://localhost/jspPro/images/SiSt.ico\"\r\n");
      out.write("    />\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <link\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      href=\"http://localhost/jspPro/resources/cdn-main/example.css\"\r\n");
      out.write("    />\r\n");
      out.write("    <script src=\"http://localhost/jspPro/resources/cdn-main/example.js\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("      span.material-symbols-outlined {\r\n");
      out.write("        vertical-align: text-bottom;\r\n");
      out.write("      }\r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <header>\r\n");
      out.write("      <h1 class=\"main\">\r\n");
      out.write("        <a href=\"#\" style=\"position: absolute; top: 30px\">JYP Ent</a>\r\n");
      out.write("      </h1>\r\n");
      out.write("      <ul>\r\n");
      out.write("        <li><a href=\"#\">로그인</a></li>\r\n");
      out.write("        <li><a href=\"#\">회원가입</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </header>\r\n");
      out.write("    <div>\r\n");
      out.write("      <xmp class=\"code\">\r\n");
      out.write("            ex07_MVC.jsp\r\n");
      out.write("            p516 Chapter18 MVC 패턴 구현 *****\r\n");
      out.write("            \r\n");
      out.write("            MVC 모델 1 JSP안에 로직 출력 싹다.\r\n");
      out.write("            MVC 모델 2는 분리되어 있는 것이다.\r\n");
      out.write("            \r\n");
      out.write("            // 파라미터로 명령어가 전달되는 경우\r\n");
      out.write("            http://localhost/jspPro/controller?cmd=boardList&cp=1&npp=15\r\n");
      out.write("            http://localhost/jspPro/controller?cmd=boardWrite\r\n");
      out.write("            http://localhost/jspPro/controller?cmd=boardDelete&seq=10\r\n");
      out.write("            http://localhost/jspPro/controller?cmd=boardDelete\r\n");
      out.write("            \r\n");
      out.write("            // 요청 URL 자체를 명령어로 사용한다. (지금은 안하고 스프링에서 사용 요망[스프링에서 파싱하는게 더 나음])\r\n");
      out.write("            http://localhost/jspPro/board/write\r\n");
      out.write("            http://localhost/jspPro/board/list/3\r\n");
      out.write("            http://localhost/jspPro/board/delete/10\r\n");
      out.write("            \r\n");
      out.write("            실습)  days04.board 폴더\r\n");
      out.write("            	   days04.board 패키지\r\n");
      out.write("            	  \r\n");
      out.write("            	  => MVC 패턴으로 변환 ?!\r\n");
      out.write("            	  days07.mvc.domain 패키지  : days04 BoardDTO.java \r\n");
      out.write("            	  days07.mvc.persistence 패키지 : days04 BoardDAO / DAOImpl .java\r\n");
      out.write("            	  days07.mvc.command 패키지( 로직 담당 클래스 ) : CommandHandler 인터페이스 public String process();\r\n");
      out.write("            	  																ListHandler.java WriteHandler.java...\r\n");
      out.write("            	  days07.mvc.service 패키지 : 서비스 클래스 ( 로그 기록 , 트랜잭션 )  - 실무에선 필요하지만 이번엔..\r\n");
      out.write("            	  days07.mvc.controller 패키지 : MV 'C'.. == 서블릿 클래스 \r\n");
      out.write("            	  						commandHandler.properties :어떤 요청은 어떤 클래스가 하는지 기록된 파일\r\n");
      out.write("            	  						/jspPro/board/list.do=ListHandler\r\n");
      out.write("            	  \r\n");
      out.write("            	  controller 서블릿 -> web.xml 등록\r\n");
      out.write("            	  \r\n");
      out.write("            	  web.xml 복붙 web_days07.xml : days07까지 사용했던 web.xml\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            	  톰캣 실행하면.. \r\n");
      out.write("            	  1. web.xml 읽음 ( 설정대로 처리 ) \r\n");
      out.write("            	      ㄴ 컨트롤러 서블릿 등록 ( *.do 매핑 )\r\n");
      out.write("            	      ㄴ 커넥션풀 등록 ( DB )\r\n");
      out.write("            	      ㄴ initparam : 모든 요청 컨트롤러가 받고 어디 모델 (핸들러)로 보낼지..\r\n");
      out.write("\r\n");
      out.write("            	\r\n");
      out.write("            	2. days07 a태그 누르면.. 컨트롤러의 doGet()으로 -> URI 뽑아냄 ( 프로퍼티즈의 매핑에 맞게끔 스트링 재단)\r\n");
      out.write("            		-> 모든 핸들러는 커맨드 핸들러를 구현하고 있음 -> 리턴 값은 '뷰'\r\n");
      out.write("       </xmp>\r\n");
      out.write("       \r\n");
      out.write("       <a href=\"/jspPro/board/list.do\">/board/list.do</a>\r\n");
      out.write("       \r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
