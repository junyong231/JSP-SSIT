package days04;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.doit.domain.DeptVO;

import com.util.DBConn;


@WebServlet("/days04/empsearch.htm")
public class EmpSearch extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public EmpSearch() {
		super();

	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 1. 부서 정보 dlist에 담기
		Connection conn = DBConn.getConnection();
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = " SELECT deptno, dname, loc "
				+" FROM dept ";
		int deptno;
		String dname, loc;

		DeptVO vo = null;
		ArrayList<DeptVO> dlist = null;

		try{
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			if( rs.next() ){
				dlist = new ArrayList<>();
				do{
					deptno = rs.getInt("deptno");
					dname = rs.getString("dname");
					loc = rs.getString("loc");           
					vo = new DeptVO(deptno, dname, loc);
					dlist.add(vo);
				}while(rs.next());
			} // if
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			try{
				rs.close();
				pstmt.close();
				// DBConn.close();
			}catch(SQLException e){
				e.printStackTrace();
			} //try     
		} // try  
		
		
		// 2. job 정보 jlist에 담기
		sql = " SELECT DISTINCT job "
				+" FROM emp "
				+" ORDER BY job ASC";      
		String job;      
		ArrayList<String> jlist = null;
		try{
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			if( rs.next() ){
				jlist = new ArrayList<>();
				do{ 
					job = rs.getString("job"); 
					jlist.add(job);
				}while(rs.next());
			} // if
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			try{
				rs.close();
				pstmt.close();
				// DBConn.close();
			}catch(SQLException e){
				e.printStackTrace();
			} //try     
		} // try  
		
		
		// 3. 한 페이지에서 다 일어날거기 때문에 선택 부서+잡 검색된 사원 정보 담기 elist
		String pdeptno = null;
		
		
		// 4. 포워딩
		System.out.println(">doGet() 호출 테스트...");




		// 포워딩 


		request.setAttribute("dlist", dlist); // dept 받기
		request.setAttribute("jlist", jlist); // job 받기

		String path = "/days04/ex02_empsearch_jstl.jsp";  // 서버 안에서 이동 ( jspPro 경로 필요 X )  
		RequestDispatcher dispatcher = request.getRequestDispatcher(path);
		dispatcher.forward(request, response); //이제 리퀘스트에 리스트도 있음 전달 ㄱㄱ

	}//doget


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {


	}//dopost

}
